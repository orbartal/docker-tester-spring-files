version: "3"

services:

    namenode:
        image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
        hostname: namenode
        container_name: namenode
        restart: always
        depends_on:
          - datanode
        networks:
          - demo-tester-spring-files
        ports:
          - 9870:9870
          - 9000:9000
        volumes:
          - hadoop_namenode:/hadoop/dfs/name
        environment:
          - CLUSTER_NAME=test
        env_file:
          - ./hadoop.env

    datanode:
        image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
        hostname: datanode
        container_name: datanode
        restart: always
        networks:
          - demo-tester-spring-files
        ports:
          - 9864:9864
        volumes:
          - hadoop_datanode:/hadoop/dfs/data
        environment:
          SERVICE_PRECONDITION: "namenode:9870"
        env_file:
          - ./hadoop.env

    demospringfilesbackend:
        image: orbartal/demo-spring-files-backend:latest
        hostname: demospringfilesbackend
        container_name: demospringfilesbackend
        restart: always
        networks:
            - demo-tester-spring-files
        ports:
            - 8080:8080
        environment:
            - FILE_METADATA_SERVICE=java.in.memory.map  
            - FILE_STORAGE_SERVICE=hadoop
            - FILE_STORAGE_DIR=\temp\demo

    demospringfilestester:
        image: orbartal/demo-spring-files-tester:latest
        hostname: demospringmongotester
        container_name: demospringmongotester
        restart: always
        networks:
            - demo-tester-spring-files
        ports:
            - 8090:8090
        depends_on:
            - demospringfilesbackend
        environment:
            - TARGET_BASE_URL=http://demospringfilesbackend:8080

volumes:
  hadoop_namenode:
  hadoop_datanode:
  
networks:
 demo-tester-spring-files:
